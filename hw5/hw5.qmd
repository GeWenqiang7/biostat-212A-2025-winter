---
title: "Biostat 212a Homework 5"
subtitle: "Due Mar 16, 2024 @ 11:59PM"
author: "Wenqiang Ge UID:106371961"
date: today
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: true
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
engine: knitr
knitr:
  opts_chunk: 
    fig.align: 'center'
    # fig.width: 6
    # fig.height: 4
    message: FALSE
    cache: false
---

## ISL Exercise 9.7.1 (10pts)

## ![](images/clipboard-2052603752.png)

------------------------------------------------------------------------

Solution:

\(a\)

```{r}
# 加载库
library(ggplot2)
library(dplyr)

# 生成随机点
set.seed(123)  # For reproducibility
points <- data.frame(
  X1 = runif(100, min = -5, max = 5),  # Random X1 values
  X2 = runif(100, min = -5, max = 5)   # Random X2 values
)

# 定义超平面方程
hyperplane_1 <- function(X1) { 1 + 3*X1 }
hyperplane_2 <- function(X1) { (-2 + X1) / 2 }

# 计算对应的 X2 值
points$hyperplane_1_result <- 1 + 3*points$X1 - points$X2

# 为每个点分配分类标签
points$region_1 <- ifelse(points$hyperplane_1_result > 0, "1 + 3X1 - X2 > 0", "1 + 3X1 - X2 < 0")

# 合并两个标签，用来区分不同区域的点
points$final_region <- paste(points$region_1)

# 绘制图形
ggplot(points) +
  # 绘制随机点
  geom_point(aes(x = X1, y = X2, color = final_region), size = 3) +
  # 绘制超平面线
  geom_abline(intercept = 1, slope = 3, color = "yellow", size = 1) +  # 1 + 3X1 - X2 = 0
  labs(title = "Hyperplane Plot with Random Points", x = "X1", y = "X2") + 
  theme_minimal() +
  theme(legend.position = "top") + 
  scale_color_manual(values = c("blue", "red"))  # Set 4 colors for the regions


```

\(b\)

```{r}
set.seed(123)  # For reproducibility
points <- data.frame(
  X1 = runif(100, min = -5, max = 5),  # Random X1 values
  X2 = runif(100, min = -5, max = 5)   # Random X2 values
)

# Define hyperplane equations
hyperplane_1 <- function(X1) { 1 + 3*X1 }
hyperplane_2 <- function(X1) { (-2 + X1) / 2 }

# Calculate corresponding X2 values
points$hyperplane_1_result <- 1 + 3*points$X1 - points$X2
points$hyperplane_2_result <- -2 + points$X1 + 2*points$X2

# Assign category labels for each point
points$region_1 <- ifelse(points$hyperplane_1_result > 0, "1 + 3X1 - X2 > 0", "1 + 3X1 - X2 < 0")
points$region_2 <- ifelse(points$hyperplane_2_result > 0, "-2 + X1 + 2X2 > 0", "-2 + X1 + 2X2 < 0")

# Combine both labels to distinguish different regions of the points
points$final_region <- paste(points$region_1, points$region_2)

# Plot
ggplot(points) +
  geom_point(aes(x = X1, y = X2, color = final_region), size = 3) +  # Random points with color based on regions
  geom_abline(intercept = 1, slope = 3, color = "yellow", size = 1, show.legend = FALSE) +  # Hyperplane 1 without legend
  geom_abline(intercept = -2, slope = -1/2, color = "green", size = 1, show.legend = FALSE) +  # Hyperplane 2 without legend
  labs(title = "Hyperplane Plot with Random Points", x = "X1", y = "X2") +
  scale_color_manual(values = c("blue", "red", "purple", "gray")) +  # Set 4 colors for the regions
  theme_minimal() + 
  theme(
    legend.position = "right", 
    legend.title = element_blank(),
    legend.text = element_text(size = 7),  # Smaller text for labels
    legend.key.size = unit(0.4, "cm"),  # Adjust legend key size for better spacing
    legend.direction = "vertical",  # Arrange labels vertically
    legend.box = "vertical",  # Stack the labels vertically
    plot.margin = margin(10, 10, 10, 10),  # Adjust margins to give more space
    aspect.ratio = 0.8  # Increase the size of the plot
  )


```

## ISL Exercise 9.7.2 (10pts)

![](images/clipboard-3787525584.png)

------------------------------------------------------------------------

Solution:

## Support vector machines (SVMs) on the `Carseats` data set (30pts)

Follow the machine learning workflow to train support vector classifier (same as SVM with linear kernel), SVM with polynomial kernel (tune the degree and regularization parameter $C$), and SVM with radial kernel (tune the scale parameter $\gamma$ and regularization parameter $C$) for classifying `Sales<=8` versus `Sales>8`. Use the same seed as in your HW4 for the initial test/train split and compare the final test AUC and accuracy to those methods you tried in HW4.

------------------------------------------------------------------------

Solution:

## Bonus (10pts)

Let $$
f(X) = \beta_0 + \beta_1 X_1 + \cdots + \beta_p X_p = \beta_0 + \beta^T X. 
$$ Then $f(X)=0$ defines a hyperplane in $\mathbb{R}^p$. Show that $f(x)$ is proportional to the signed distance of a point $x$ to the hyperplane $f(X) = 0$.

------------------------------------------------------------------------

Solution:
